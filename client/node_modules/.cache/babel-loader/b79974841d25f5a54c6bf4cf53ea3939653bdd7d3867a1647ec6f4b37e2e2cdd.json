{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/admin/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  verify: () => api.get('/auth/verify'),\n  logout: () => api.post('/auth/logout')\n};\n\n// Booking API\nexport const bookingAPI = {\n  create: bookingData => api.post('/bookings', bookingData),\n  getAll: params => api.get('/bookings', {\n    params\n  }),\n  getById: id => api.get(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, {\n    status\n  }),\n  checkAvailability: data => api.post('/bookings/check-availability', data)\n};\n\n// Contact API\nexport const contactAPI = {\n  submit: contactData => api.post('/contact', contactData),\n  newsletter: (email, name) => api.post('/contact/newsletter', {\n    email,\n    name\n  }),\n  getAll: params => api.get('/contact', {\n    params\n  }),\n  getById: id => api.get(`/contact/${id}`),\n  updateStatus: (id, status) => api.patch(`/contact/${id}/status`, {\n    status\n  }),\n  delete: id => api.delete(`/contact/${id}`),\n  getStats: () => api.get('/contact/stats/overview')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","verify","get","logout","bookingAPI","bookingData","getAll","params","getById","id","updateStatus","patch","checkAvailability","data","contactAPI","submit","contactData","newsletter","email","name","delete","getStats"],"sources":["C:/Users/abhin/NDN/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/admin/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  verify: () => api.get('/auth/verify'),\n  logout: () => api.post('/auth/logout'),\n};\n\n// Booking API\nexport const bookingAPI = {\n  create: (bookingData) => api.post('/bookings', bookingData),\n  getAll: (params) => api.get('/bookings', { params }),\n  getById: (id) => api.get(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, { status }),\n  checkAvailability: (data) => api.post('/bookings/check-availability', data),\n};\n\n// Contact API\nexport const contactAPI = {\n  submit: (contactData) => api.post('/contact', contactData),\n  newsletter: (email, name) => api.post('/contact/newsletter', { email, name }),\n  getAll: (params) => api.get('/contact', { params }),\n  getById: (id) => api.get(`/contact/${id}`),\n  updateStatus: (id, status) => api.patch(`/contact/${id}/status`, { status }),\n  delete: (id) => api.delete(`/contact/${id}`),\n  getStats: () => api.get('/contact/stats/overview'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}